{"ast":null,"code":"var _jsxFileName = \"/Users/orijoon98/Desktop/GitHub/Twitter/src/components/TweetFactory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TweetFactory = ({\n  userObj\n}) => {\n  _s();\n\n  const [tweet, setTweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async event => {\n    if (tweet === \"\") {\n      return;\n    }\n\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    ;\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl\n    };\n    await dbService.collection(\"tweets\").add(tweetObj);\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setTweet(value);\n  };\n\n  const onFileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    className: \"factoryForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"factoryInput__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        classname: \"factoryInput__input\",\n        value: tweet,\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        maxlength: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\u2192\",\n        className: \"factoryInput__arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"attach-file\",\n      className: \"factoryInput__label\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPlus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"attach-file\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: onFileChange,\n      style: {\n        opacity: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), attachment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"factoryForm__attachment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: attachment,\n        style: {\n          backgroundImage: attachment\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"factoryForm__clear\",\n        onClick: onClearAttachment,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TweetFactory, \"lOp6Ak0siTbp7JekiEwIZ0F1eZM=\");\n\n_c = TweetFactory;\nexport default TweetFactory;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetFactory\");","map":{"version":3,"sources":["/Users/orijoon98/Desktop/GitHub/Twitter/src/components/TweetFactory.js"],"names":["React","useState","v4","uuidv4","dbService","storageService","FontAwesomeIcon","faPlus","faTimes","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","onSubmit","event","preventDefault","attachmentUrl","attachmentRef","ref","child","uid","response","putString","getDownloadURL","tweetObj","text","createdAt","Date","now","creatorId","collection","add","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","onClearAttachment","opacity","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({ userObj }) => {\n    const [tweet, setTweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if(tweet === \"\"){\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\"){\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        };\n        const tweetObj = {\n            text: tweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        };\n        await dbService.collection(\"tweets\").add(tweetObj);\n        setTweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {target:{value}} = event;\n        setTweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: { result }} = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return(\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input classname=\"factoryInput__input\" value ={tweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxlength={120} />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>    \n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{opacity: 0}} />\n                {attachment && (\n                    <div className=\"factoryForm__attachment\">\n                        <img src={attachment} style={{backgroundImage: attachment}} />\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                            <span>Remove</span>\n                            <FontAwesomeIcon icon={faTimes} />\n                        </div>\n                    </div>\n                )}\n        </form>\n    );\n};\n\nexport default TweetFactory;"]},"metadata":{},"sourceType":"module"}