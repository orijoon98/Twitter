{"ast":null,"code":"var _jsxFileName = \"/Users/orijoon98/Desktop/GitHub/Twitter/src/routes/Auth.js\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  const onSocialClick = async event => {\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    await authService.signInWithPopup(provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"google\",\n        children: \"Continue with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"github\",\n        children: \"Continue with Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/orijoon98/Desktop/GitHub/Twitter/src/routes/Auth.js"],"names":["authService","firebaseInstance","React","AuthForm","Auth","onSocialClick","event","target","name","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,OAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACnC,UAAM;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA;AAAD;AAAR,QAAkBF,KAAxB;AACA,QAAIG,QAAJ;;AACA,QAAGD,IAAI,KAAK,QAAZ,EAAqB;AACjBC,MAAAA,QAAQ,GAAG,IAAIR,gBAAgB,CAACS,IAAjB,CAAsBC,kBAA1B,EAAX;AACH,KAFD,MAEO,IAAGH,IAAI,KAAK,QAAZ,EAAqB;AACxBC,MAAAA,QAAQ,GAAG,IAAIR,gBAAgB,CAACS,IAAjB,CAAsBE,kBAA1B,EAAX;AACH;;AACD,UAAMZ,WAAW,CAACa,eAAZ,CAA4BJ,QAA5B,CAAN;AACH,GATD;;AAUA,sBACI;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAEJ,aAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEA,aAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CApBD;;KAAMD,I;AAqBN,eAAeA,IAAf","sourcesContent":["import { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {target:{name}} = event;\n        let provider;\n        if(name === \"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if(name === \"github\"){\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n    return (\n        <div>\n            <AuthForm />\n            <div>\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n            </div>\n        </div>\n    );\n}\nexport default Auth;"]},"metadata":{},"sourceType":"module"}