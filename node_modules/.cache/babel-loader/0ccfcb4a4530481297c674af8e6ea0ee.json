{"ast":null,"code":"var _jsxFileName = \"/Users/orijoon98/Desktop/GitHub/Twitter/src/components/TweetFactory.js\",\n    _s = $RefreshSig$();\n\nimport { dbService, storageService } from \"fbase\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TweetFactory = ({\n  userObj\n}) => {\n  _s();\n\n  const [tweet, setTweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    ;\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl\n    };\n    await dbService.collection(\"tweets\").add(tweetObj);\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setTweet(value);\n  };\n\n  const onFileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: tweet,\n      onChange: onChange,\n      type: \"text\",\n      placeholder: \"What's on your mind?\",\n      maxlength: 120\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Tweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), attachment && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: attachment,\n        width: \"50px\",\n        height: \"50px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClearAttachment,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TweetFactory, \"lOp6Ak0siTbp7JekiEwIZ0F1eZM=\");\n\n_c = TweetFactory;\nexport default TweetFactory;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetFactory\");","map":{"version":3,"sources":["/Users/orijoon98/Desktop/GitHub/Twitter/src/components/TweetFactory.js"],"names":["dbService","storageService","React","TweetFactory","userObj","tweet","setTweet","useState","attachment","setAttachment","onSubmit","event","preventDefault","attachmentUrl","attachmentRef","ref","child","uid","uuidv4","response","putString","getDownloadURL","tweetObj","text","createdAt","Date","now","creatorId","collection","add","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","onClearAttachment"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BF,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMG,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,aAAa,GAAG,EAApB;;AACA,QAAGL,UAAU,KAAK,EAAlB,EAAqB;AACjB,YAAMM,aAAa,GAAGb,cAAc,CAACc,GAAf,GAAqBC,KAArB,CAA4B,GAAEZ,OAAO,CAACa,GAAI,IAAGC,MAAM,EAAG,EAAtD,CAAtB;AACA,YAAMC,QAAQ,GAAG,MAAML,aAAa,CAACM,SAAd,CAAwBZ,UAAxB,EAAoC,UAApC,CAAvB;AACAK,MAAAA,aAAa,GAAG,MAAMM,QAAQ,CAACJ,GAAT,CAAaM,cAAb,EAAtB;AACH;;AAAA;AACD,UAAMC,QAAQ,GAAG;AACbC,MAAAA,IAAI,EAAElB,KADO;AAEbmB,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFE;AAGbC,MAAAA,SAAS,EAAEvB,OAAO,CAACa,GAHN;AAIbJ,MAAAA;AAJa,KAAjB;AAMA,UAAMb,SAAS,CAAC4B,UAAV,CAAqB,QAArB,EAA+BC,GAA/B,CAAmCP,QAAnC,CAAN;AACAhB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAG,IAAAA,aAAa,CAAC,EAAD,CAAb;AACH,GAjBD;;AAkBA,QAAMqB,QAAQ,GAAInB,KAAD,IAAW;AACxB,UAAM;AAACoB,MAAAA,MAAM,EAAC;AAACC,QAAAA;AAAD;AAAR,QAAmBrB,KAAzB;AACAL,IAAAA,QAAQ,CAAC0B,KAAD,CAAR;AACH,GAHD;;AAIA,QAAMC,YAAY,GAAItB,KAAD,IAAW;AAC5B,UAAM;AACFoB,MAAAA,MAAM,EAAE;AAAEG,QAAAA;AAAF;AADN,QAEFvB,KAFJ;AAGA,UAAMwB,OAAO,GAAGD,KAAK,CAAC,CAAD,CAArB;AACA,UAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,SAAP,GAAoBC,aAAD,IAAmB;AAClC,YAAM;AAACC,QAAAA,aAAa,EAAE;AAAEC,UAAAA;AAAF;AAAhB,UAA8BF,aAApC;AACA9B,MAAAA,aAAa,CAACgC,MAAD,CAAb;AACH,KAHD;;AAIAL,IAAAA,MAAM,CAACM,aAAP,CAAqBP,OAArB;AACH,GAXD;;AAYA,QAAMQ,iBAAiB,GAAG,MAAMlC,aAAa,CAAC,IAAD,CAA7C;;AACA,sBACI;AAAM,IAAA,QAAQ,EAAEC,QAAhB;AAAA,4BACQ;AAAO,MAAA,KAAK,EAAGL,KAAf;AAAsB,MAAA,QAAQ,EAAEyB,QAAhC;AAA0C,MAAA,IAAI,EAAC,MAA/C;AAAsD,MAAA,WAAW,EAAC,sBAAlE;AAAyF,MAAA,SAAS,EAAE;AAApG;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,MAAM,EAAC,SAA1B;AAAoC,MAAA,QAAQ,EAAEG;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFR,eAGQ;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAHR,EAISzB,UAAU,iBACP;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEA,UAAV;AAAsB,QAAA,KAAK,EAAC,MAA5B;AAAmC,QAAA,MAAM,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEmC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAnDD;;GAAMxC,Y;;KAAAA,Y;AAqDN,eAAeA,YAAf","sourcesContent":["import { dbService, storageService } from \"fbase\";\nimport React from \"react\";\n\nconst TweetFactory = ({ userObj }) => {\n    const [tweet, setTweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\"){\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        };\n        const tweetObj = {\n            text: tweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        };\n        await dbService.collection(\"tweets\").add(tweetObj);\n        setTweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {target:{value}} = event;\n        setTweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: { result }} = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(null);\n    return(\n        <form onSubmit={onSubmit}>\n                <input value ={tweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxlength={120} />\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n                <input type=\"submit\" value=\"Tweet\" />\n                {attachment && (\n                    <div>\n                        <img src={attachment} width=\"50px\" height=\"50px\" />\n                        <button onClick={onClearAttachment}>Clear</button>\n                    </div>\n                )}\n        </form>\n    );\n};\n\nexport default TweetFactory;"]},"metadata":{},"sourceType":"module"}