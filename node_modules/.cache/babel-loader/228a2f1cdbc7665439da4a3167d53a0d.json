{"ast":null,"code":"var _jsxFileName = \"/Users/orijoon98/Desktop/GitHub/Twitter/src/components/Tweet.js\",\n    _s = $RefreshSig$();\n\nimport { dbService } from \"fbase\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tweet = ({\n  tweetObj,\n  isOwner\n}) => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n\n    if (ok) {\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n    }\n  };\n\n  toggleEditing = () => setEditing(prev => !prev);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editing ? /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTweet,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: tweetObj.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onDeleteClick,\n          children: \"Delete Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditing,\n          children: \"Edit Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tweet, \"Y6kpMyx6SmJFfFvgZTXh4icn+ak=\");\n\n_c = Tweet;\nexport default Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/Users/orijoon98/Desktop/GitHub/Twitter/src/components/Tweet.js"],"names":["dbService","React","Tweet","tweetObj","isOwner","editing","setEditing","useState","newTweet","setNewTweet","text","onDeleteClick","ok","window","confirm","doc","id","delete","toggleEditing","prev"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAACJ,QAAQ,CAACO,IAAV,CAAxC;;AACA,QAAMC,aAAa,GAAG,YAAY;AAC9B,UAAMC,EAAE,GAAGC,MAAM,CAACC,OAAP,CAAe,6CAAf,CAAX;;AACA,QAAGF,EAAH,EAAM;AACF,YAAMZ,SAAS,CAACe,GAAV,CAAe,UAASZ,QAAQ,CAACa,EAAG,EAApC,EAAuCC,MAAvC,EAAN;AACH;AACJ,GALD;;AAMAC,EAAAA,aAAa,GAAG,MAAMZ,UAAU,CAAEa,IAAD,IAAU,CAACA,IAAZ,CAAhC;;AACA,sBACI;AAAA,cACKd,OAAO,gBACJ;AAAA,6BACI;AAAO,QAAA,KAAK,EAAEG,QAAd;AAAwB,QAAA,QAAQ;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADI,gBAKJ;AAAA,8BACI;AAAA,kBAAKL,QAAQ,CAACO;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKN,OAAO,iBACJ;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAEO,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAEO,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBAHR;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA7BD;;GAAMhB,K;;KAAAA,K;AA+BN,eAAeA,KAAf","sourcesContent":["import { dbService } from \"fbase\";\nimport React from \"react\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n        if(ok){\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\n        }\n    };\n    toggleEditing = () => setEditing((prev) => !prev);\n    return(\n        <div>\n            {editing ? (\n                <form>\n                    <input value={newTweet} required />\n                </form>\n            ) : (\n                <>\n                    <h4>{tweetObj.text}</h4>\n                    {isOwner && (\n                        <>\n                            <button onClick={onDeleteClick}>Delete Tweet</button>\n                            <button onClick={toggleEditing}>Edit Tweet</button>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    )\n};\n\nexport default Tweet;"]},"metadata":{},"sourceType":"module"}