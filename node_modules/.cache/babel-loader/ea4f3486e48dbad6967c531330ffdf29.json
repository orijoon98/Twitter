{"ast":null,"code":"var _jsxFileName = \"/Users/orijoon98/Desktop/GitHub/Twitter/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  userObj\n}) => {\n  _s();\n\n  const [tweet, setTweet] = useState(\"\");\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"tweets\").onSnapshot(snapshot => {\n      const tweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTweets(tweetArray);\n    });\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    await dbService.collection(\"tweets\").add({\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid\n    });\n    setTweet(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setTweet(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: tweet,\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        maxlength: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: tweet.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, tweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"poXO4X5TGzPOM/88aHcungMT68A=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/orijoon98/Desktop/GitHub/Twitter/src/routes/Home.js"],"names":["dbService","React","useEffect","useState","Home","userObj","tweet","setTweet","tweets","setTweets","collection","onSnapshot","snapshot","tweetArray","docs","map","doc","id","data","onSubmit","event","preventDefault","add","text","createdAt","Date","now","creatorId","uid","onChange","target","value"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,SAAS,CAACU,UAAV,CAAqB,QAArB,EAA+BC,UAA/B,CAA0CC,QAAQ,IAAI;AACtD,YAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,GAAG,KAAK;AACzCC,QAAAA,EAAE,EAACD,GAAG,CAACC,EADkC;AAEzC,WAAGD,GAAG,CAACE,IAAJ;AAFsC,OAAL,CAArB,CAAnB;AAGIT,MAAAA,SAAS,CAACI,UAAD,CAAT;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;;AAQA,QAAMM,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMrB,SAAS,CAACU,UAAV,CAAqB,QAArB,EAA+BY,GAA/B,CAAmC;AACrCC,MAAAA,IAAI,EAAEjB,KAD+B;AAErCkB,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAF0B;AAGrCC,MAAAA,SAAS,EAAEtB,OAAO,CAACuB;AAHkB,KAAnC,CAAN;AAKArB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GARD;;AASA,QAAMsB,QAAQ,GAAIT,KAAD,IAAW;AACxB,UAAM;AAACU,MAAAA,MAAM,EAAC;AAACC,QAAAA;AAAD;AAAR,QAAmBX,KAAzB;AACAb,IAAAA,QAAQ,CAACwB,KAAD,CAAR;AACH,GAHD;;AAIA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEZ,QAAhB;AAAA,8BACI;AAAO,QAAA,KAAK,EAAGb,KAAf;AAAsB,QAAA,QAAQ,EAAEuB,QAAhC;AAA0C,QAAA,IAAI,EAAC,MAA/C;AAAsD,QAAA,WAAW,EAAC,sBAAlE;AAAyF,QAAA,SAAS,EAAE;AAApG;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,gBACKrB,MAAM,CAACO,GAAP,CAAWT,KAAK,iBACb;AAAA,+BACI;AAAA,oBAAKA,KAAK,CAACiB;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUjB,KAAK,CAACW,EAAhB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAvCD;;GAAMb,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n    const [tweet, setTweet] = useState(\"\");\n    const [tweets, setTweets] = useState([]);\n    useEffect(() => {\n        dbService.collection(\"tweets\").onSnapshot(snapshot => {\n        const tweetArray = snapshot.docs.map(doc => ({\n            id:doc.id,\n            ...doc.data()}));\n            setTweets(tweetArray);\n        });\n    }, []);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.collection(\"tweets\").add({\n            text: tweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid\n        });\n        setTweet(\"\");\n    };\n    const onChange = (event) => {\n        const {target:{value}} = event;\n        setTweet(value);\n    };\n    return(\n        <div>\n            <form onSubmit={onSubmit}>\n                <input value ={tweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxlength={120} />\n                <input type=\"submit\" value=\"Tweet\" />\n            </form>\n            <div>\n                {tweets.map(tweet => (\n                    <div key={tweet.id}>\n                        <h4>{tweet.text}</h4>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n};\nexport default Home;"]},"metadata":{},"sourceType":"module"}