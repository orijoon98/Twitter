{"ast":null,"code":"var _jsxFileName = \"/Users/orijoon98/Desktop/GitHub/Twitter/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport Tweet from \"components/Tweet\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  userObj\n}) => {\n  _s();\n\n  const [tweet, setTweet] = useState(\"\");\n  const [tweets, setTweets] = useState([]);\n  const [attachment, setAttachment] = useState();\n  useEffect(() => {\n    dbService.collection(\"tweets\").onSnapshot(snapshot => {\n      const tweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTweets(tweetArray);\n    });\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    ;\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl\n    };\n    await dbService.collection(\"tweets\").add(tweetObj);\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setTweet(value);\n  };\n\n  const onFileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: tweet,\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        maxlength: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), attachment && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: attachment,\n          width: \"50px\",\n          height: \"50px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClearAttachment,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(Tweet, {\n        tweetObj: tweet,\n        isOwner: tweet.creatorId === userObj.uid\n      }, tweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"h+kDASfAwFRmnW2ee0WI1zvncPI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/orijoon98/Desktop/GitHub/Twitter/src/routes/Home.js"],"names":["Tweet","v4","uuidv4","dbService","storageService","React","useEffect","useState","Home","userObj","tweet","setTweet","tweets","setTweets","attachment","setAttachment","collection","onSnapshot","snapshot","tweetArray","docs","map","doc","id","data","onSubmit","event","preventDefault","attachmentUrl","attachmentRef","ref","child","uid","response","putString","getDownloadURL","tweetObj","text","createdAt","Date","now","creatorId","add","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","onClearAttachment"],"mappings":"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","sourcesContent":["import Tweet from \"components/Tweet\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n    const [tweet, setTweet] = useState(\"\");\n    const [tweets, setTweets] = useState([]);\n    const [attachment, setAttachment] = useState();\n    useEffect(() => {\n        dbService.collection(\"tweets\").onSnapshot(snapshot => {\n        const tweetArray = snapshot.docs.map(doc => ({\n            id:doc.id,\n            ...doc.data()}));\n            setTweets(tweetArray);\n        });\n    }, []);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\"){\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        };\n        const tweetObj = {\n            text: tweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        };\n        await dbService.collection(\"tweets\").add(tweetObj);\n        setTweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {target:{value}} = event;\n        setTweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: { result }} = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(null);\n    return(\n        <div>\n            <form onSubmit={onSubmit}>\n                <input value ={tweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxlength={120} />\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n                <input type=\"submit\" value=\"Tweet\" />\n                {attachment && (\n                    <div>\n                        <img src={attachment} width=\"50px\" height=\"50px\" />\n                        <button onClick={onClearAttachment}>Clear</button>\n                    </div>\n                )}\n            </form>\n            <div>\n                {tweets.map(tweet => (\n                    <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    )\n};\nexport default Home;"]},"metadata":{},"sourceType":"module"}